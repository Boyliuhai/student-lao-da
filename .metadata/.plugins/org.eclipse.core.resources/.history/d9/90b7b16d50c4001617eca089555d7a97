package com.UI.Admin;

import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import com.DAL.*;

@SuppressWarnings("serial")
public class StuSelectCourseForm extends JFrame implements ActionListener{
	public StuSelectCourseForm(){
		init();
		prepare(2014000);
		this.setVisible(true);
	}
	//创建课程服务类
	CourseService cs = new CourseService();
	StudentService ss = new StudentService();
	
	JLabel lblMessage = null;
	JLabel lblMessage1 = null;
	JLabel lblMessage2 = null;
	
	JButton btnAddCourse = null;
	JButton btnDeleteCourse = null;
	//数据表
	JTable tSelected = null;
	JScrollPane sp1 = null;
	JTable tSelecting = null;
	JScrollPane sp2 = null;
	
	public void init() {
		//创建对象，学生学号、姓名等基本信息和可选课程列表和已选课程列表
		JPanel p_center_left = new JPanel();
		JPanel p_center_right = new JPanel();
		lblMessage1 = new JLabel("已选课程");
		lblMessage2 = new JLabel("未选课程");
		btnAddCourse = new JButton("选修");
		btnDeleteCourse = new JButton("退选");
		
		tSelected = new JTable();
		sp1 = new JScrollPane();
		tSelecting = new JTable();
		sp2 = new JScrollPane();
		
		//设置对象属性
		this.setTitle("学生选课");
		this.setSize(1100, 550);
		this.setLocation(300, 300);
		this.setResizable(false);
		btnAddCourse.addActionListener(this);
		btnDeleteCourse.addActionListener(this);
		this.setLayout(new FlowLayout());
		
		//添加对象
		p_center_left.add(lblMessage1);
		p_center_left.add(sp1);
		p_center_right.add(lblMessage2);
		p_center_right.add(sp2);
		this.add(p_center_left);
		this.add(p_center_right);
		this.add(btnAddCourse);
		this.add(btnDeleteCourse);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource() == btnAddCourse){
			//选课
			int selectRow = tSelecting.getSelectedRows().length;
			DefaultTableModel tableModel = (DefaultTableModel) tSelecting.getModel();
			if(selectRow>0){
				int[] selectRows = tSelecting.getSelectedRows();
				for(int i=0;i<selectRows.length;i++){
					//获取课程编号
					int cId = (Integer) tableModel.getValueAt(i, 0);
					//获取学号
					int stuId = ss.getStudentIdByName(LoginForm.currentUser);
					//执行更新数据，insert into choosecourse values(stuId,courseId);
					cs.ChooseCourse(stuId, cId);
					new QuestionDialog();
				}
			}
			//更新表格
			tSelected.validate();
			tSelecting.validate();
		}else if(e.getSource() == btnDeleteCourse){
			//退选
			int selectRow = tSelected.getSelectedRows().length;
			DefaultTableModel tableModel = (DefaultTableModel) tSelected.getModel();
			if(selectRow>0){
				int[] selectRows = tSelected.getSelectedRows();
				for(int i=0;i<selectRows.length;i++){
					//获取课程编号
					int cId = (Integer) tableModel.getValueAt(i, 0);
					//获取学号
					int stuId = ss.getStudentIdByName(LoginForm.currentUser);
					//执行更新数据，insert into choosecourse values(stuId,courseId);
					cs.QuitCourse(stuId, cId);
				}
			}
			//更新表格
			tSelected.validate();
			tSelecting.validate();
		}
	}
	
	//设置表格数据
	private void prepare(int stuId){
		DefaultTableModel dtmSelected = cs.getSelectedModelByStuId(stuId);
		tSelected.setModel(dtmSelected);
		
		sp1.setViewportView(tSelected);
		tSelected.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		
		DefaultTableModel dtmSelecting = cs.getSelectingModelByStuId(stuId);
		tSelecting.setModel(dtmSelecting);//设置数据源
		
		sp2.setViewportView(tSelecting);
		tSelecting.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
	}
	
}

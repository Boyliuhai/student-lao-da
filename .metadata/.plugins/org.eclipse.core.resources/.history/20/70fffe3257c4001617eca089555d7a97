package com.UI.Admin;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;
import com.DAL.*;
import com.Dao.StuBasicInfo;
import com.IObserver.IObservable;
import com.IObserver.IObserver;

@SuppressWarnings("serial")
public class StudentBasicInfoForm extends JFrame implements IObserver, ActionListener{
	//学生服务类
	StudentService ss = new StudentService();
	AcademyService as = new AcademyService();
	
	JTextField txtStudentName = null;
	JRadioButton rbMale = null;
	JRadioButton rbFemale = null;
	JTextField txtBirthday = null;
	JTextField txtAcademyName = null;
	JTextField txtIdNo = null;
	JTextField txtImageURL = null;
	JTextArea txtInstruction = null;
	JLabel lblMessage = null;
	ImageIcon img = null;
	JLabel imageLabel = null;
	JButton btnClear = null;
	JButton btnAdd = null;
	JButton btnModefy = null;
	JButton btnDelete = null;
	
	//学号隐藏域,用于更新，删除，查找
	private int hidden = -1;
	
	public StudentBasicInfoForm(){
		init();
		//订阅
		StuIDInput.getInstance().addObserver(this);
	}
	
	public void init() {
		//姓名、性别、出生日期、所在院系、身份证号、照片、简介等
		lblMessage = new JLabel("你好，" + LoginForm.currentUser);
		JPanel p_name = new JPanel();
		JLabel lblStudentName = new JLabel("姓名：");
		txtStudentName = new JTextField(16);
		
		JPanel p_sex = new JPanel();
		JLabel lblSex = new JLabel("性别：");
		ButtonGroup bg = new ButtonGroup();
		rbMale = new JRadioButton("男");
		rbFemale = new JRadioButton("女");
		
		JPanel p_birthday = new JPanel();
		JLabel lblBirthday = new JLabel("出生日期：");
		txtBirthday = new JTextField(16);
		
		JPanel p_academyName = new JPanel();
		JLabel lblAcademyName = new JLabel("院系编号：");
		txtAcademyName = new JTextField(16);
		
		JPanel p_IdNo = new JPanel();
		JLabel lblIdNo = new JLabel("身份证号：");
		txtIdNo = new JTextField(16);
		
		JPanel p_img1 = new JPanel();
		JPanel p_img2 = new JPanel();
		img = new ImageIcon("");
		imageLabel = new JLabel(img);
		txtImageURL = new JTextField(16);
		
		JPanel p_instruction = new JPanel();
		JLabel lblInstruction = new JLabel("简介：");
		txtInstruction = new JTextArea(12, 40);
		
		btnAdd = new JButton("提交");
		btnClear = new JButton("清空");
		btnModefy = new JButton("修改");
		btnDelete = new JButton("删除");
		
		JPanel p_center = new JPanel();
		JPanel p_east = new JPanel();
		JPanel p_west = new JPanel();
		JPanel p_north = new JPanel();
		JPanel p_south = new JPanel();
		
		//设置对象属性
		this.setTitle("添加学生基本信息");
		this.setSize(600, 500);
		this.setLocation(650, 300);
		this.setLayout(new BorderLayout());
		p_center.setLayout(new FlowLayout(1, 5, 15));
		img.setImage(img.getImage().getScaledInstance(210, 280, Image.SCALE_DEFAULT));//设置图像大小
		p_west.setLayout(new GridLayout(2, 1));
		p_center.setLayout(new FlowLayout(1, 15, 15));
		this.setResizable(false);
		bg.add(rbFemale);
		bg.add(rbMale);
		p_sex.add(lblSex);
		p_sex.add(rbMale);
		p_sex.add(rbFemale);
		
		//添加
		this.getContentPane().add("North", p_north);
		this.getContentPane().add("West", p_west);
		this.getContentPane().add("Center", p_center);
		this.getContentPane().add("East", p_east);
		this.getContentPane().add("South", p_south);
		p_north.add(lblMessage);
		p_name.add(lblStudentName);
		p_name.add(txtStudentName);
		p_sex.add(lblSex);
		p_sex.add(rbFemale);
		p_sex.add(rbMale);
		p_IdNo.add(lblIdNo);
		p_IdNo.add(txtIdNo);
		p_academyName.add(lblAcademyName);
		p_academyName.add(txtAcademyName);
		p_birthday.add(lblBirthday);
		p_birthday.add(txtBirthday);
		p_instruction.add(lblInstruction);
		p_instruction.add(txtInstruction);
		p_center.add(p_name);
		p_center.add(p_sex);
		p_center.add(p_IdNo);
		p_center.add(p_academyName);
		p_center.add(p_birthday);
		p_center.add(p_instruction);
		p_img1.add(imageLabel);
		p_img2.add(txtImageURL);
		p_west.add(p_img1);
		p_west.add(p_img2);
		p_south.add(btnAdd);
		p_south.add(btnModefy);
		p_south.add(btnDelete);
		p_south.add(btnClear);
		
		btnAdd.addActionListener(this);//添加监听事件
		btnClear.addActionListener(this);
		btnModefy.addActionListener(this);
		btnDelete.addActionListener(this);
	}
	
	//private void bindDataToCombo(JComboBox<String> obj){
		//List<String> lists = as.getAllAcademyNames();
		//for(int i=0;i<lists.size();i++){
			//obj.addItem(lists.get(i));
		//}
	//}

	@Override
	public void update(IObservable o) {
		StuBasicInfo stu = ((StuIDInput)o).stu;
		this.hidden = Integer.parseInt(((StuIDInput)o).txtStudentId.getText().trim());
		
		if(stu != null){
			dataBindToForm(stu);
			this.setVisible(true);
		}
	}

	//将数据填充到界面中
	private void dataBindToForm(StuBasicInfo s) {
		this.lblMessage.setText("你好" + LoginForm.currentUser);
		this.txtStudentName.setText(s.getName());
		this.txtInstruction.setText(s.getInstruction());
		this.txtBirthday.setText(s.getBirthday());
		this.txtIdNo.setText(s.getIdNo());
		
		String imgURL = s.getImageURL();
		this.txtImageURL.setText(imgURL);
		ImageIcon img2 = new ImageIcon(imgURL);
		this.imageLabel.setIcon(img2);
		//设置图片大小
		img2.setImage(img2.getImage().getScaledInstance(150, 200, Image.SCALE_DEFAULT));
		
		//单选按钮控制显示
		String sex = s.getSex();
		if(sex.equals("M")){
			this.rbMale.setSelected(true);
			this.rbFemale.setSelected(false);
		}else if(sex.equals("F")){
			this.rbFemale.setSelected(true);
			this.rbMale.setSelected(false);
		}
		this.txtAcademyName.setText(Integer.toString(s.getAcademyId()));
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource() == btnClear){
			clear();
		}else if(e.getSource() == btnAdd){
			addStudentInfo(prepareModelFromForm());
		}else if(e.getSource() == btnModefy){
			modefyStudentInfo(prepareModelFromForm());
		}else if(e.getSource() == btnDelete){
			deleteStudentInfo(prepareModelFromForm());
		}
	}
	
	//修改学生信息
	private void modefyStudentInfo(StuBasicInfo stu) {
		if(ss.ModefyStudent(stu)){
			QuestionDialog.ShowDialog(this, "修改提示", "学生信息修改成功");
		}else{
			QuestionDialog.ShowDialog(this, "修改提示", "学生信息修改失败，请重试或联系管理员！");
		}
	}

	//删除学生信息
	private void deleteStudentInfo(StuBasicInfo stu) {
		if(QuestionDialog.ShowDialog(this, "删除提示", "确定要删除吗？") == QuestionDialog.Dialog_OK){
			if(ss.DeleteStudent(stu.getStudentId())){
				QuestionDialog.ShowDialog(this, "删除提示", "学生信息删除成功");
			}else{
				QuestionDialog.ShowDialog(this, "删除提示", "学生信息删除失败，请重试或联系管理员！");
			}
		}
	}

	//添加学生信息
	private void addStudentInfo(StuBasicInfo stu){
		if(ss.AddStudent(stu)){
			QuestionDialog.ShowDialog(this, "添加提示", "学生信息提交成功");
		}else{
			QuestionDialog.ShowDialog(this, "添加提示", "学生信息提交失败，请重试或联系管理员！");
		}
	}

	//将页面上的信息封装到学生实体中
	private StuBasicInfo prepareModelFromForm(){
		StuBasicInfo stu = new StuBasicInfo();
		stu.setStudentId(hidden);
		stu.setAcademyId(Integer.parseInt(this.txtAcademyName.getText()));
		stu.setName(this.txtStudentName.getText());
		stu.setSex(this.rbFemale.isSelected()?"F":"M");
		stu.setImageURL(this.txtImageURL.getText());
		stu.setInstruction(this.txtInstruction.getText());
		stu.setBirthday(this.txtBirthday.getText());
		stu.setIdNo(this.txtIdNo.getText());
		return stu;
	}
	
	//清空表单
	public void clear(){
		this.txtAcademyName.setText("");
		this.txtBirthday.setText("");
		this.txtIdNo.setText("");
		this.txtImageURL.setText("");
		this.txtInstruction.setText("");
		this.txtStudentName.setText("");
		this.imageLabel.setIcon(null);
	}
}
